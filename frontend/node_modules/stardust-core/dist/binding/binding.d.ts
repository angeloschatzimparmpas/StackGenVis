import * as Specification from "../specification/specification";
import { TextureBinding } from "./array";
import { BindingValue, BindingType, Type } from "./types";
export * from "./types";
export * from "./array";
export declare class Binding {
    private _type;
    private _value;
    constructor(typeName: string, value: BindingValue);
    readonly valueType: Type;
    readonly value: BindingValue;
    readonly bindingType: BindingType;
    readonly specValue: Specification.Value;
    readonly textureValue: TextureBinding;
    forEach(data: any[], callback: (value: Specification.Value, i: number) => any): void;
    map(data: any[]): Specification.Value[];
    fillBinary(data: any[], rep: number, array: Float32Array | Int32Array): void;
}
