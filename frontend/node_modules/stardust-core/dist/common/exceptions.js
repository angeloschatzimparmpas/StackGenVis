"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/* Base class for Stardust errors */
var BaseError = /** @class */ (function (_super) {
    __extends(BaseError, _super);
    function BaseError(message) {
        var _this = _super.call(this, message) || this;
        _this.stack = new Error(message).stack;
        return _this;
    }
    return BaseError;
}(Error));
exports.BaseError = BaseError;
/* Parse error */
var ParseError = /** @class */ (function (_super) {
    __extends(ParseError, _super);
    function ParseError(message, start, end) {
        var _this = _super.call(this, message) || this;
        _this.name = "ParseError";
        _this.message = message;
        _this.start = start;
        _this.end = end;
        return _this;
    }
    return ParseError;
}(BaseError));
exports.ParseError = ParseError;
/* Compile error */
var CompileError = /** @class */ (function (_super) {
    __extends(CompileError, _super);
    function CompileError(message, start, end) {
        var _this = _super.call(this, message) || this;
        _this.name = "CompileError";
        _this.message = message;
        _this.start = start;
        _this.end = end;
        return _this;
    }
    return CompileError;
}(BaseError));
exports.CompileError = CompileError;
/* Runtime error */
var RuntimeError = /** @class */ (function (_super) {
    __extends(RuntimeError, _super);
    function RuntimeError(message, start, end) {
        var _this = _super.call(this, message) || this;
        _this.name = "RuntimeError";
        _this.message = message;
        _this.start = start;
        _this.end = end;
        return _this;
    }
    return RuntimeError;
}(BaseError));
exports.RuntimeError = RuntimeError;
//# sourceMappingURL=exceptions.js.map