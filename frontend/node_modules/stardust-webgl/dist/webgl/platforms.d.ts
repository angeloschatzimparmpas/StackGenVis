import { WebGLPlatform } from "./webgl";
export declare class WebGLCanvasPlatform2D extends WebGLPlatform {
    protected _pixelRatio: number;
    protected _canvas: HTMLCanvasElement;
    protected _width: number;
    protected _height: number;
    constructor(canvas: HTMLCanvasElement, width?: number, height?: number);
    pixelRatio: number;
    resize(width: number, height: number): void;
    clear(color?: number[]): void;
}
export declare class WebGLCanvasPlatform3D extends WebGLPlatform {
    protected _pixelRatio: number;
    protected _canvas: HTMLCanvasElement;
    protected _width: number;
    protected _height: number;
    constructor(canvas: HTMLCanvasElement, width?: number, height?: number);
    pixelRatio: number;
    resize(width: number, height: number): void;
    set3DView(fovY: number, near?: number, far?: number): void;
    setMVPMatrix(matrix: number[]): void;
    clear(color?: number[]): void;
}
export declare class WebGLCanvasPlatformWebVR extends WebGLPlatform {
    protected _pixelRatio: number;
    protected _canvas: HTMLCanvasElement;
    protected _width: number;
    protected _height: number;
    constructor(canvas: HTMLCanvasElement, width?: number, height?: number);
    pixelRatio: number;
    resize(width: number, height: number): void;
    set3DView(fovY: number, near?: number, far?: number): void;
    setWebVRView(viewMatrix: number[], projectionMatrix: number[]): void;
    clear(color?: number[]): void;
}
