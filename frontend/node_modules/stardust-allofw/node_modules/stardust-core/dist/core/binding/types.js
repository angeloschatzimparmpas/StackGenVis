"use strict";
var math_1 = require("../math/math");
(function (BindingType) {
    BindingType[BindingType["VALUE"] = 0] = "VALUE";
    BindingType[BindingType["FUNCTION"] = 1] = "FUNCTION";
    BindingType[BindingType["TEXTURE"] = 2] = "TEXTURE";
})(exports.BindingType || (exports.BindingType = {}));
var BindingType = exports.BindingType;
var ShiftBinding = (function () {
    function ShiftBinding(name, offset) {
        this.name = name;
        this.offset = offset;
    }
    return ShiftBinding;
}());
exports.ShiftBinding = ShiftBinding;
// Resolve binding primitives to Value (Value = number or number[]).
function getBindingValue(value) {
    if (value instanceof math_1.MathType) {
        return value.toArray();
    }
    else {
        return value;
    }
}
exports.getBindingValue = getBindingValue;
//# sourceMappingURL=types.js.map