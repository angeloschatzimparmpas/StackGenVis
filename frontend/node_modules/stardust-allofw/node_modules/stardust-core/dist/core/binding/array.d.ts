import { BindingPrimitive } from "./types";
export interface TextureData {
    width: number;
    height: number;
    numberComponents: number;
    data: Float32Array;
    dimensions: number;
}
export declare abstract class TextureBinding {
    abstract getTextureData(): TextureData;
}
export declare type ArrayBindingFunction = (datum: any, index: number, data: any[]) => BindingPrimitive;
export declare class Array extends TextureBinding {
    private _data;
    private _valueFunction;
    private _dirty;
    private _textureData;
    getTextureData(): TextureData;
    data(): any[];
    data(data: any[]): Array;
    value(): ArrayBindingFunction;
    value(func: ArrayBindingFunction): Array;
}
export declare function array(): Array;
